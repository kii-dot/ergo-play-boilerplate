x-app: &default-app
  build:
    context: "."
    target: "${BUILD_TARGET:-app}"
  depends_on:
    - postgres
    - redis
  env_file:
    - .env
  environment:
    - POSTGRES_PASSWORD="password"
  restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
  stop_grace_period: "3s"
  tty: true

services:
  exle:
    <<: *default-app
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_WEB_CPUS:-0}"
          memory: "${DOCKER_WEB_MEMORY:-0}"
    healthcheck:
      test: "${DOCKER_WEB_HEALTHCHECK_TEST:-curl localhost:9000/up}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    ports:
      - "${DOCKER_WEB_PORT_FORWARD:-127.0.0.1:9000}:9000"

  postgres:
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_POSTGRES_CPUS:-0}"
          memory: "${DOCKER_POSTGRES_MEMORY:-0}"
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD="password"
    image: "postgres:14.2-bullseye"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./conf/sqlQueries/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

  redis:
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_REDIS_CPUS:-0}"
          memory: "${DOCKER_REDIS_MEMORY:-0}"
    env_file:
      - .env
    image: redis:6.2.6-bullseye
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    volumes:
      - redis:/data


volumes:
  postgres: {}
  redis: {}


